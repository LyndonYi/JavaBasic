1：必须要有主函数作为程序的入口，不然不能执行：
		   class Cat
		   {
		  		int age;
		  		int weight;
		  		void meow()
		  		{
		  			System.out.println();
		  		}
		这是因为 这个类没有main方法，因此不能运行。不过可以使用它创建相应的对象。	 
		   }
		   
2：system.out.println();语句要放在方法里面才能执行；

3：引用也叫指向

4：JAVA中没有向C C++那样的地址，JAVA是通过引用来实现指向的：定义了一个
      Class A-->
 		A a=new A()；这句话分为两个部分：
              A a;//声明了一个对象引用（将要指向一个实际的对象（类）或者说是一个对象变量），但是这是还没有指向一个实际的对象
              new A()//指向一个实际的对象,这个new出来的东西是指在堆中的东西
 		A是放在堆中的，
   		a是放在栈中的，是一个指向A的引用（不叫地址，但是跟C中的地址作用一样），类是一种引用数据类型，
       		所谓的引用数据类型是指这种类型的变量总是指向对象内存实体地址，通过该对象引用可以间接访问相应的数据值，在JAVA中可以忽略对象名和对象引用名的区别，并将对象引用名称为对象名
       并不会创建实际的对象，使用new运算符在堆中创建某个类的对象（也称为实例，创建对象也称为实例化）时，必须同时指定相应的构造方法，如果没有指定，系统会为其构造一个无参de默认构造方法
	而new A();是一个匿名的对象，没有变量名，程序中的其他语句无法访问它，即只能在创建匿名对象的同时访问其成员，如new A();


5:注意this关键字的运用。用于区分局部变量和成员变量的同名。this.name表示的是成员变量(对象的成员属性)，而定义在构造函数中的局变量赋给成员变量.


6:JAVA中，不允许程序直接访问I/O设备，其设备（包括文件）的I/O操作是以流的形式实现的。
	所谓的流是一个抽象的概念，它可以表示任何有可能生产数据的数据源对象，或者有能力接受数据的接收端对象，而不是指字节，程序员可以把输入或者输出的数据看作是一个字节（字符）序列的数据流
	在JAVA中，文件和流也是对象，系统定义了大量的有关文件管理恶化流操作的类。  

7：异常处理
	  所谓的异常处理是对程序运行或者在编译时所产生的异常的一种处理，如果不进行处理则程序会在遇到异常的地方，停止下来而不运行，这不是我们所期待，人难免有错，就好像写程序时也难免会出错一样，关键是要
	捕捉错误，即捕捉异常，然后进行对异常的处理：
	  异常有两种：一种是错误，一种是异常；错误是灾难性的，也就是无法处理的，所以我们来讲一下可以处理的这一类异常。

7:导入等同于把其他的类文件拉到当前正在使用的文件里面，以便于在当前文件中，创建导入类的对象。而实际上让告诉当前文件导入类所在的物理路径，让当前文件去找。