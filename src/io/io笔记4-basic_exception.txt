/*一个标准的IO流基本异常*/
package io;

import java.io.*;

public class Attention03_Basic_Exception {
/*      
 IO流中异常处理：任何跟设备资源有关的访问和调用都会有可能存在异常，所以要进行对异常进行处理。
 比如：
     1:创建一个输出流对象    把内存里面建立的流写到文件中，该文件有可能不存在（路劲不对），
                   总不可能要把数据写到一个不存在的文件中吧，所以要对这个语句进行异常处理：
                   一种是调用这个构造函数的方法进行声明异常，一种是进行try catch处理。
     2： 如果文件的路径对了，并且系统本来就有这个文件，则会以将要创建的文件写入内容进行覆盖原来文件的内容。
     3：finnaly 语句是写的关闭资源语句，且一定要关闭资源，所以才用到finnaly,在进行关闭资源前要进行是否等于空的判断，如果为空，则
                               资源关闭不了    所以要进行为空的错误捕捉。
     
   一般在IO流中要进行异常处理的总结如下：
      输入流对象要关联的文件时，  

*/


public static void main(String[] args) {
	
	FileWriter fw=null;
	
	try
	{
		 fw=new FileWriter("F:\\00.txt");//有可能找不到指定路径，对应的对象创建不成功
		fw.write( "abcdefg");
	}
	catch (IOException e)
	{
		System.out.println("找不到指定的路劲，创建文件失败");
		
	}
	finally
	{
		
		try
		{
		if(fw!=null)//如果不是一个空对象则，则执行下面这条关闭语句
			         //如果是一个空对象则，进行捕捉
		fw.close();
		}
		catch (IOException e)
		{
			System.out.println("由于路径不对，创建目的文件失败，空对象的出现导致无法正常关闭资源，捕捉fw.close()");
		}
	}
	
}


	
}
