 内部类指的是在一个类里面还定义了一个类，相对于这个外部类来说，里面这个类就是一个内部类；
 内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许同一个包的其他类访问该类，而内部类的方法可以访问外部类的所有数据，包括私有的数据。
 内部类分为：
                      成员内部类：指的是一个定义在外部类成员变量的位置的一个类，相当于一个成员变量。
                                             创建内部类时， 必须利用外部类对象来创建内部类，不能直接去NEW一个内部类对象：内部类 对象名=外部类对象.new内部类（）；
                                              而外部类不能直接使用内部类的成员和方法，可先创建内部类对象，然后通过内部类的对象来访问成员变量和方法；
                                              如果外部类和内部类具有相同的成员变量或者方法，内部类默认访问自己的成员变量或者方法，如果要访问外部类的成员变量，
                                              可以使用、this关键字:外部类对象名.this.成员变量或者方法；
                       静态内部类：静态内部类是用static修饰的类
                                               特点：1：静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员的方式访问
                         2：  如果外部类的静态成员和内部类的成员相同，可通过"类名（外部类）.成员"来访问外部类的成员，而不用想非静态类那样调用：外部类.this.成员，
                                                           调用内部类成员时则直接成员比标识符。
                         3：创建静态内部类的对象时，不需要外部类的对象，这点跟非静态内部类创建内部类的方法不同，直接创建内部类 对象名=new 内部类
                                                           
    	    方法内部类:方法内部类是内部类定义在外部类的方法中，方法内部类只在该方法内部可以使用
    	                          所以方法内部类不能再外部类的方法以外的地方使用，因此方法内部类不能使用访问控制符和static
    	    匿名内部类